
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.РеализацияТоваровУслуг) Тогда
		
        КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
        КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.РеализацияТоваровУслуг.ПолноеИмя();
        КомандаСоздатьНаОсновании.Представление = ОбщегоНазначения.ПредставлениеОбъекта(Метаданные.Документы.РеализацияТоваровУслуг);
        КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;

	Возврат Неопределено;
	
КонецФункции

Процедура ПриОпределенииНастроекПечати(НастройкиОбъекта) Экспорт
	
	// Доработка Задача "Работа с заявками клиентов" 03.04.2025
	НастройкиОбъекта.ПриДобавленииКомандПечати = Истина;
	// Конец доработка Задача "Работа с заявками клиентов" 03.04.2025
	
КонецПроцедуры

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Доработка Задача "Работа с заявками клиентов" 03.04.2025
	// Акт об оказанных услугах
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АктОбОказанныхУслугах";
	КомандаПечати.Представление = НСтр("ru = 'Акт об оказанных услугах'");
	КомандаПечати.Порядок = 5;
	// Конец доработка Задача "Работа с заявками клиентов" 03.04.2025
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Доработка Задача "Работа с заявками клиентов" 03.04.2025
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "АктОбОказанныхУслугах");
	Если ПечатнаяФорма <> Неопределено Тогда
	    ПечатнаяФорма.ТабличныйДокумент = ПечатьАктОбОказанныхУслугах(МассивОбъектов, ОбъектыПечати);
	    ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Акт об оказанных услугах'");
	    ПечатнаяФорма.ПолныйПутьКМакету = "Документ.РеализацияТоваровУслуг.ПФ_MXL_АктОбОказанныхУслугах";
	КонецЕсли;
	// Конец доработка Задача "Работа с заявками клиентов" 03.04.2025
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Функция  ПечатьАктОбОказанныхУслугах(МассивОбъектов, ОбъектыПечати)
	
	// Доработка Задача "Работа с заявками клиентов" 03.04.2025
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_АктОбОказанныхУслугах";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РеализацияТоваровУслуг.ПФ_MXL_АктОбОказанныхУслугах");
	
	ДанныеДокументов = ПолучитьДанныеДокументов(МассивОбъектов);
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеДокументов.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			// Все документы нужно выводить на разных страницах.
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ВывестиЗаголовокАкта(ДанныеДокументов, ТабличныйДокумент, Макет);
		
		ВывестиШапку(ДанныеДокументов, ТабличныйДокумент, Макет);
		
		ВывестиУслуги(ДанныеДокументов, ТабличныйДокумент, Макет);
		
		ВывестиПодвалАкта(ДанныеДокументов, ТабличныйДокумент, Макет);
		
        // В табличном документе необходимо задать имя области, в которую был 
        // выведен объект. Нужно для возможности печати комплектов документов.
        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
            НомерСтрокиНачало, ОбъектыПечати, ДанныеДокументов.Ссылка);		
		
	КонецЦикла;	
		
	Возврат ТабличныйДокумент;


	//ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	//Шапка = Макет.ПолучитьОбласть("Шапка");
	//ОбластьУслугиШапка = Макет.ПолучитьОбласть("УслугиШапка");
	//ОбластьУслуги = Макет.ПолучитьОбласть("Услуги");
	////Подвал = Макет.ПолучитьОбласть("Подвал");

	////ВставлятьРазделительСтраниц = Ложь;
	////Пока Выборка.Следующий() Цикл
	////	Если ВставлятьРазделительСтраниц Тогда
	////		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	////	КонецЕсли;

	//	ТабДок.Вывести(ОбластьЗаголовок);

	//	Шапка.Параметры.Заполнить(Выборка);
	//	ТабДок.Вывести(Шапка, Выборка.Уровень());

	//	ТабДок.Вывести(ОбластьУслугиШапка);
	//	ВыборкаУслуги = Выборка.Услуги.Выбрать();
	//	Пока ВыборкаУслуги.Следующий() Цикл
	//		ОбластьУслуги.Параметры.Заполнить(ВыборкаУслуги);
	//		ТабДок.Вывести(ОбластьУслуги, ВыборкаУслуги.Уровень());
	//	КонецЦикла;

	////	Подвал.Параметры.Заполнить(Выборка);
	////	ТабДок.Вывести(Подвал);

	////	ВставлятьРазделительСтраниц = Истина;
	//КонецЦикла;
	
	// Конец доработка Задача "Работа с заявками клиентов" 03.04.2025
	
КонецФункции

Функция ПолучитьДанныеДокументов(МассивОбъектов)

	// Доработка Задача "Работа с заявками клиентов" 03.04.2025
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка,
	|	РеализацияТоваровУслуг.Дата,
	|	РеализацияТоваровУслуг.Договор,
	|	РеализацияТоваровУслуг.Контрагент,
	|	РеализацияТоваровУслуг.Номер,
	|	РеализацияТоваровУслуг.Организация,
	|	РеализацияТоваровУслуг.Ответственный,
	|	РеализацияТоваровУслуг.СуммаДокумента,
	|	РеализацияТоваровУслуг.Услуги.(
	|		НомерСтроки,
	|		Номенклатура,
	|		Количество,
	|		Цена,
	|		Сумма
	|	)
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка В (&МассивОбъектов)";
	Запрос.Параметры.Вставить("МассивОбъектов", МассивОбъектов);
	
	Возврат Запрос.Выполнить().Выбрать();
	
	// Конец доработка Задача "Работа с заявками клиентов" 03.04.2025
	
КонецФункции

Процедура ВывестиЗаголовокАкта(ДанныеДокументов, ТабличныйДокумент, Макет)
	
	// Доработка Задача "Работа с заявками клиентов" 03.04.2025
	
	ОбластьЗаголовокАкта = Макет.ПолучитьОбласть("Заголовок");
	ТабличныйДокумент.Вывести(ОбластьЗаголовокАкта);
	
	// Конец доработка Задача "Работа с заявками клиентов" 03.04.2025
	
КонецПроцедуры

Процедура ВывестиШапку(ДанныеДокументов, ТабличныйДокумент, Макет)
	
	// Доработка Задача "Работа с заявками клиентов" 03.04.2025
	
	ОбластьШапкаАкта = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапкаАкта.Параметры.Заполнить(ДанныеДокументов);
	ТабличныйДокумент.Вывести(ОбластьШапкаАкта);
	
	// Конец доработка Задача "Работа с заявками клиентов" 03.04.2025
	
КонецПроцедуры

Процедура ВывестиУслуги(ДанныеДокументов, ТабличныйДокумент, Макет)
	
	// Доработка Задача "Работа с заявками клиентов" 03.04.2025
	
	ОбластьУслугиШапка = Макет.ПолучитьОбласть("УслугиШапка");
	ОбластьУслуги = Макет.ПолучитьОбласть("Услуги");
	//ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	//ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	//ОбластьИтого = Макет.ПолучитьОбласть("Итого");
	
	ТабличныйДокумент.Вывести(ОбластьУслугиШапка);
		
	ВыборкаУслуги = ДанныеДокументов.Услуги.Выбрать();
	Пока ВыборкаУслуги.Следующий() Цикл
		ОбластьУслуги.Параметры.Заполнить(ВыборкаУслуги);
		ТабличныйДокумент.Вывести(ОбластьУслуги, ВыборкаУслуги.Уровень());
	КонецЦикла;
	
	//ТабличныйДокумент.Вывести(ОбластьПодвал);
	//
	//ДанныеПечати = Новый Структура;
	//ДанныеПечати.Вставить("Всего", ДанныеДокументов.СуммаДокумента);
	//
	//ОбластьИтого.Параметры.Заполнить(ДанныеПечати);
	//ТабличныйДокумент.Вывести(ОбластьИтого);
	
	// Конец доработка Задача "Работа с заявками клиентов" 03.04.2025
	
КонецПроцедуры

Процедура ВывестиПодвалАкта(ДанныеДокументов, ТабличныйДокумент, Макет)
	
	// Доработка Задача "Работа с заявками клиентов" 03.04.2025
	
	Подвал = Макет.ПолучитьОбласть("Подвал");
	Подвал.Параметры.Заполнить(ДанныеДокументов);
	СуммаДокументаПрописью = ЧислоПрописью(ДанныеДокументов.СуммаДокумента);
	Подвал.Параметры.СуммаДокументаПрописью = "(" + СуммаДокументаПрописью + ")";
	ТабличныйДокумент.Вывести(Подвал);
	
	// Конец доработка Задача "Работа с заявками клиентов" 03.04.2025
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
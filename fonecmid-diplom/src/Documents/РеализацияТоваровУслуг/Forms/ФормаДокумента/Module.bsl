
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

// Доработка Задача "Работа с заявками клиентов" 03.04.2025
	ДобавитьПрограммноКомандуЗаполнить();
// Конец доработка Задача "Работа с заявками клиентов" 03.04.2025
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// Доработка Задача "Работа с заявками клиентов" 03.04.2025

&НаСервере
Процедура ДобавитьПрограммноКомандуЗаполнить()
	
	// Доработка Задача "Работа с заявками клиентов" 10.04.2025
	
	КомандаЗаполнить = Команды.Добавить("Заполнить");
	КомандаЗаполнить.Заголовок = ("Заполнить");
	КомандаЗаполнить.Действие = ("КомандаЗаполнить");
	
	КнопкаКоманды = Элементы.Добавить("Заполнить", Тип("КнопкаФормы"), ЭтаФорма.КоманднаяПанель);
	КнопкаКоманды.ИмяКоманды = "Заполнить";
	КнопкаКоманды.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
	
	// Конец доработка Задача "Работа с заявками клиентов" 10.04.2025
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнить(Команда)
	
	// Доработка Задача "Работа с заявками клиентов" 10.04.2025
	
	КомандаЗаполнитьНаСервере();
	Элементы.Страницы.ТекущаяСтраница = Элементы.ГруппаУслуги;
	
	// Конец доработка Задача "Работа с заявками клиентов" 10.04.2025
	
КонецПроцедуры

&НаСервере
Процедура КомандаЗаполнитьНаСервере()
	
	// Доработка Задача "Работа с заявками клиентов" 10.04.2025
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ВидАбонентскийДоговор = Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбоненскоеОбслуживание;
	ВыполненныеРаботы = ДокументОбъект.ДанныеОВыполненныхРаботахПоДоговору(Объект.Договор, Объект);
	
	Если ВыполненныеРаботы.Количество() > 0 Тогда
		СтрокаТЗ = ВыполненныеРаботы[0];
	Иначе
		СтрокаТЗ = Неопределено;
	КонецЕсли;
	
	
	Если Объект.Договор.ВидДоговора = ВидАбонентскийДоговор Тогда
		ДокументОбъект.ВыполнитьАвтозаполнение(Объект, СтрокаТЗ);
	Иначе
		ОбщегоНазначения.СообщитьПользователю("Заполнение возможно только для абонентского договора");
		Возврат;
	КонецЕсли;
	
	// Конец доработка Задача "Работа с заявками клиентов" 10.04.2025
	
КонецПроцедуры

// Конец доработка Задача "Работа с заявками клиентов" 03.04.2025

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество;
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
